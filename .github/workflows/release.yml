name: Release

on:
  push:
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+' # Major.Minor.Patch
      - 'v0-9]+.[0-9]+.[0-9]+-beta.[0-9]+' # Beta releases
      - 'v[0-9]+.[0-9]+.[0-9]+-rc.[0-9]+' # Release candidates

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write # Needed for creating releases
      
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Fetch all history for changelog parsing
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'pnpm'
    
    - name: Install pnpm
      uses: pnpm/action-setup@v4
      with:
        version: 10
    
    - name: Install dependencies
      run: pnpm install --frozen-lockfile
    
    - name: Extract version from tag
      id: get_version
      run: |
        # Remove 'v' prefix from tag
        VERSION=${GITHUB_REF#refs/tags/v}
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Validate version with package.json
      run: |
        PKG_VERSION=$(node -p "require('./package.json').version")
        TAG_VERSION="${{ steps.get_version.outputs.version }}"
        if [ "$PKG_VERSION" != "$TAG_VERSION" ]; then
          echo "Error: Git tag version ($TAG_VERSION) does not match package.json version ($PKG_VERSION)"
          exit 1
        fi
        echo "âœ“ Version validation successful: $TAG_VERSION"
    
    - name: Extract changelog section
      id: get_changelog
      uses: coditory/changelog-parser@v1
      with:
        path: CHANGELOG.md
        version: "${{ steps.get_version.outputs.version }}"
    
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release create "${{ github.ref_name }}" \
          --title "Release ${{ github.ref_name }}" \
          --notes "${{ steps.get_changelog.outputs.description }}"