name: Test

on:
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Create .env file
      run: |
        cp env.example .env
        # Populate with placeholder values for testing
        sed -i 's/YOUR_CLIENT_ID_HERE/mock-client-id/' .env
        sed -i 's/YOUR_PUBLIC_KEY_HERE/mock-public-key/' .env
        
    - name: Create simple test script
      run: |
        cat > scripts/ci-test.js << 'EOF'
        import dotenv from 'dotenv';
        import fs from 'fs';
        import path from 'path';

        dotenv.config();

        // Simple validation tests instead of using unstable_dev
        async function runTests() {
          try {
            console.log('ğŸ§ª Testing project files existence...');
            
            // Check if main worker file exists
            const workerPath = path.resolve('./cloudflare-worker.js');
            if (!fs.existsSync(workerPath)) {
              throw new Error('Worker file not found');
            }
            console.log('âœ… Worker file exists');
            
            // Check if wrangler config exists
            const wranglerPath = path.resolve('./wrangler.toml');
            if (!fs.existsSync(wranglerPath)) {
              throw new Error('Wrangler config not found');
            }
            console.log('âœ… Wrangler config exists');
            
            // Basic validation of worker file - check for the Cloudflare worker's export format
            const workerContent = fs.readFileSync(workerPath, 'utf8');
            if (!workerContent.includes('export default') || !workerContent.includes('async fetch(')) {
              throw new Error('Worker file appears to be missing core functionality');
            }
            console.log('âœ… Worker file contains basic required code');
            
            console.log('All tests passed!');
          } catch (error) {
            console.error('Error during tests:', error);
            process.exit(1);
          }
        }

        runTests();
        EOF
        
    - name: Run simplified tests
      run: node scripts/ci-test.js
      
    - name: Run build
      run: npm run build 